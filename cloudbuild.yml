steps:
- id: Set Env File
  name: 'gcr.io/cloud-builders/docker'
  entrypoint: bash
  args:
    - '-e'
    - '-c'
    - |
      echo "$$APP_ENV" > .env
  secretEnv: ['APP_ENV']

- id: 'Build image'
  name: 'gcr.io/cloud-builders/docker'
  args: [ 'build', '-f', './.devops/Dockerfile.prod', '--tag=${_ARTIFACT}/$PROJECT_ID/coletor/coletor-fe:$SHORT_SHA', '--tag=${_ARTIFACT}/$PROJECT_ID/coletor/coletor-fe:latest', '.' ]

- id: 'Push image'
  name: 'gcr.io/cloud-builders/docker'
  args: [ 'push', '${_ARTIFACT}/$PROJECT_ID/coletor/coletor-fe:$SHORT_SHA']

- id: 'Push latest image'
  name: 'gcr.io/cloud-builders/docker'
  args: [ 'push', '${_ARTIFACT}/$PROJECT_ID/coletor/coletor-fe:latest']

- id: Configure kubectl
  name: gcr.io/cloud-builders/kubectl
  args:
    - cluster-info
  env:
    - PROJECT=$PROJECT_ID
    - KUBECONFIG=${_KUBECONFIG}   
    - CLOUDSDK_COMPUTE_REGION=${_REGION}
    - CLOUDSDK_COMPUTE_ZONE=${_ZONE}
    - CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER_NAME}

- id: Deploy K8s
  name: 'gcr.io/prj-hml-excelencia/helm'
  args:
    - 'upgrade'
    - '--install'
    - 'coletor-fe'
    - './.devops/coletor-fe'
    - '--set=image.tag=$SHORT_SHA'
    - '--namespace=coletor'
    - '--values=./.devops/coletor-fe/values.yaml'
    - '--values=${_VALUES}' 
    # - '--wait'
  env:
    - HELM_HOME=${_HELM_HOME}
    - KUBECONFIG=${_KUBECONFIG}
    - CLOUDSDK_COMPUTE_REGION=${_REGION}
    - CLOUDSDK_COMPUTE_ZONE=${_ZONE}
    - CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER_NAME}

timeout: 1200s
availableSecrets:
  secretManager:
  - versionName: ${_VERSION_NAME}
    env: 'APP_ENV'        

options:
  logging: CLOUD_LOGGING_ONLY    